@model MyTryHard.Models.Chart.ChartData
@using MyTryHard.Models.Chart
@using MyTryHard.Helpers

<svg id="@ViewData["id"]"
     height="@(ViewData["height"] ?? 510)"
     width="@(ViewData["width"] ?? 800)"
     viewBox="0, 0, 800, 610"
     preserveAspectRatio="xMinYMin meet">
    <style type="text/css">
        .slice:hover {
            filter: brightness(120%) drop-shadow(0.4em 0.4em 2px rgba(0,0,0,0.5));
            stroke: #00B2EE;
            stroke-width: 2;
        }

        text {
            font-family: "Open Sans", Tahoma, serif;
        }

        g text {
            font-size: 1.4rem;
        }

        text.title {
            fill: black;
            font-size: 2rem;
            font-weight: bold;
        }
    </style>
    @{
        int lastTextHeight = 20;
        const int lastTextOffset = 40;
        const int textAlign = 555;
        const double radius = 250;
        const double radOffset = 255;
        int heightOffset = 0;

        if (Model.Title != "")
        {
            if (Model.TitlePosition == ChartPosition.Top)
            {
                heightOffset = 70;
                int titleX = (500 - (Model.Title.Length * 5)) / 2;
                <text>
                <text class="title" x="@titleX" y="35">@Model.Title</text></text>
            }
        }

        lastTextHeight += heightOffset;

        // Calculate how much angle is a slice.
        double totalValues = Model.Items.Sum(x => x.Value);
        double anglePerValue = 360.0d / totalValues;

        double startAngle = 0;
        double endAngle = 0;
        foreach (ChartItem slice in Model.Items)
        {
            // Calculate angle of the slice.
            startAngle = endAngle;
            endAngle = startAngle + (slice.Value * anglePerValue);

            var startAngleRad = Math.PI * startAngle / 180;
            var endAngleRad = Math.PI * endAngle / 180;

            // First coord of arc.
            var x1 = radOffset + radius * Math.Cos(startAngleRad);
            var y1 = radOffset + heightOffset + radius * Math.Sin(startAngleRad);

            // Second coord of arc
            var x2 = radOffset + radius * Math.Cos(endAngleRad);
            var y2 = radOffset + heightOffset + radius * Math.Sin(endAngleRad);

            int bigArc = (endAngle - startAngle) > 180 ? 1 : 0;
            var d = "M" + radOffset + "," + (250 + heightOffset) + "  L" + x1.NumString() + "," + y1.NumString() + "  A250,250 0 " + bigArc + ",1 " + x2.NumString() + "," + y2.NumString() + " Z L" + x2.NumString() + "," + y2.NumString() + "";
            <g>
                <title>@slice.Label (@slice.Value)</title>
                <text x="@(textAlign - 25)"
                      y="@(lastTextHeight - 1)"
                      fill="@slice.Color.HexCode()"
                      stroke="black"
                      style="font-size: 2rem;"
                      stroke-width="2">■</text>
                <text x="@textAlign" y="@lastTextHeight">
                    @((slice.Value / totalValues).ToString("0.00 %")) - @slice.Label (@slice.Value)
                </text>
                <path class="slice" d="@d.ToString()" stroke-linejoin="miter" stroke="black" stroke-width="1" fill="@slice.Color.HexCode()" />
            </g>

            lastTextHeight += lastTextOffset;
        }
    }
</svg>